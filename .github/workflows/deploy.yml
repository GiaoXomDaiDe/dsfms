name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: 22.16.0
          cache: "npm"

      - name: Create .env file
        run: echo "${{secrets.ENV}}" > .env

      - name: Install dependencies
        run: npm i --force

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Build NestJS application
        run: npm run build

      - name: Run tests (optional)
        run: npm run test
        continue-on-error: true

  deploy:
    runs-on: ubuntu-latest
    needs: build
    # Only deploy on push to main (not on PR)
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          timeout: 300s
          script: |
            echo "Starting deployment..."

            # Setup Node.js environment
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh

            # Install Node.js if not exists, then use it
            nvm install 22.16.0
            nvm use 22.16.0

            echo "Using Node $(node -v) and npm $(npm -v)"

            # Install PM2 globally if not exists
            if ! command -v pm2 &> /dev/null; then
              echo "Installing PM2..."
              npm install -g pm2
              echo "PM2 installed successfully"
            else
              echo "PM2 already installed"
            fi

            # Navigate to project directory
            cd ~/dsfms

            # Pull latest code
            echo "Pulling latest code..."
            git fetch --all
            git reset --hard origin/main

            # Setup environment
            echo "Setting up environment..."
            cat .env
            echo "${{ secrets.ENV_NESTJS }}" > .env
            cat .env

            # Install dependencies
            echo "Installing dependencies..."
            npm i --force

            # Database operations
            echo "Running database operations..."
            npx prisma generate
            npx prisma migrate deploy

            # Build application
            echo "Building application..."
            npm run build

            # Restart PM2 application
            echo "Restarting application..."
            pm2 restart DSFMS || pm2 start ecosystem.config.js

            # Health check
            echo "Health check..."
            sleep 5
            pm2 status DSFMS

            echo "Deployment completed successfully!"

  notify-success:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: success()
    steps:
      - name: Notify Deployment Success
        uses: appleboy/discord-action@v1.2.0
        with:
          webhook_url: ${{ secrets.WEBHOOK_URL }}
          color: "#28a745"
          username: "DSFMS Bot"
          message: |
            ‚úÖ **DEPLOYMENT SUCCESSFUL**

            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Triggered by: ${{ github.actor }}
            Status: Production deployment completed

            üöÄ Application is now live and ready for use!

            View Details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  notify-failure:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: failure()
    steps:
      - name: Notify Deployment Failure
        uses: appleboy/discord-action@v1.2.0
        with:
          webhook_url: ${{ secrets.WEBHOOK_URL }}
          color: "#dc3545"
          username: "DSFMS Bot"
          message: |
            ‚ùå **DEPLOYMENT FAILED**

            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Triggered by: ${{ github.actor }}
            Status: Deployment failed

            üîß Please check the logs and resolve the issues.

            View Logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  notify-cancelled:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: cancelled()
    steps:
      - name: Notify Deployment Cancelled
        uses: appleboy/discord-action@v1.2.0
        with:
          webhook_url: ${{ secrets.WEBHOOK_URL }}
          color: "#ffc107"
          username: "DSFMS Bot"
          message: |
            ‚ö†Ô∏è **DEPLOYMENT CANCELLED**

            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Triggered by: ${{ github.actor }}
            Status: Deployment was cancelled

            View Details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
